{"ast":null,"code":"var _jsxFileName = \"/Users/atsukotoda/Desktop/react-chat-app/src/components/MessageItem.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { Avatar, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { gravatarPath } from '../gravatar';\nconst useStyles = makeStyles(() => ({\n  inline: {\n    display: 'inline'\n  }\n}));\n\nconst MessageItem = ({\n  isLastItem,\n  name,\n  text\n}) => {\n  const ref = useRef(null);\n  const classes = useStyles();\n  const avatarPath = gravatarPath(name);\n  useEffect(() => {\n    if (isLastItem) {\n      ref.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [isLastItem]);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    divider: true,\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: avatarPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: name,\n    secondary: /*#__PURE__*/React.createElement(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default MessageItem;","map":{"version":3,"sources":["/Users/atsukotoda/Desktop/react-chat-app/src/components/MessageItem.js"],"names":["React","useEffect","useRef","Avatar","ListItem","ListItemAvatar","ListItemText","Typography","makeStyles","gravatarPath","useStyles","inline","display","MessageItem","isLastItem","name","text","ref","classes","avatarPath","current","scrollIntoView","behavior"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,YAJF,EAKEC,UALF,QAMO,mBANP;AAOA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC,OAAO;AAClCG,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAD0B,CAAP,CAAD,CAA5B;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAD,KAAgC;AAClD,QAAMC,GAAG,GAAGf,MAAM,CAAC,IAAD,CAAlB;AACA,QAAMgB,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAMS,UAAU,GAAGV,YAAY,CAACM,IAAD,CAA/B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,UAAJ,EAAgB;AACdG,MAAAA,GAAG,CAACG,OAAJ,CAAYC,cAAZ,CAA2B;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA3B;AACD;AACF,GAJQ,EAIN,CAACR,UAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,IAAnB;AAAyB,IAAA,GAAG,EAAEG,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAEJ,IADX;AAEE,IAAA,SAAS,eACP,oBAAC,UAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,SAAS,EAAEG,OAAO,CAACP,MAHrB;AAIE,MAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGK,IANH,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAoBD,CA/BD;;AAiCA,eAAeH,WAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { gravatarPath } from '../gravatar';\n\nconst useStyles = makeStyles(() => ({\n  inline: {\n    display: 'inline',\n  },\n}));\n\nconst MessageItem = ({ isLastItem, name, text }) => {\n  const ref = useRef(null);\n  const classes = useStyles();\n  const avatarPath = gravatarPath(name);\n\n  useEffect(() => {\n    if (isLastItem) {\n      ref.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [isLastItem]);\n\n  return (\n    <ListItem divider={true} ref={ref}>\n      <ListItemAvatar>\n        <Avatar src={avatarPath} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={name}\n        secondary={\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n          >\n            {text}\n          </Typography>\n        }\n      />\n    </ListItem>\n  );\n};\n\nexport default MessageItem;\n"]},"metadata":{},"sourceType":"module"}